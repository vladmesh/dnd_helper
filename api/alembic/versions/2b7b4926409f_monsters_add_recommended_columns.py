"""monsters_add_recommended_columns

Revision ID: 2b7b4926409f
Revises: 83e04999b45a
Create Date: 2025-08-31 21:06:04.612295

"""
import sqlalchemy as sa  # noqa: F401
import sqlmodel  # noqa: F401
from alembic import op  # noqa: F401
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2b7b4926409f'
down_revision = '83e04999b45a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('monster', sa.Column('name_ru', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('monster', sa.Column('name_en', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('monster', sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('monster', sa.Column('subtypes', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('monster', sa.Column('environments', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('monster', sa.Column('roles', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('monster', sa.Column('is_legendary', sa.Boolean(), nullable=True))
    op.add_column('monster', sa.Column('has_lair_actions', sa.Boolean(), nullable=True))
    op.add_column('monster', sa.Column('is_spellcaster', sa.Boolean(), nullable=True))
    op.add_column('monster', sa.Column('source', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('monster', sa.Column('page', sa.Integer(), nullable=True))
    op.add_column('monster', sa.Column('is_flying', sa.Boolean(), nullable=True))
    op.add_column('monster', sa.Column('has_ranged', sa.Boolean(), nullable=True))
    op.add_column('monster', sa.Column('has_aoe', sa.Boolean(), nullable=True))
    op.add_column('monster', sa.Column('threat_tier', sa.SmallInteger(), nullable=True))
    op.add_column('monster', sa.Column('speed_walk', sa.Integer(), nullable=True))
    op.add_column('monster', sa.Column('speed_fly', sa.Integer(), nullable=True))
    op.add_column('monster', sa.Column('speed_swim', sa.Integer(), nullable=True))
    op.add_column('monster', sa.Column('speed_climb', sa.Integer(), nullable=True))
    op.add_column('monster', sa.Column('speed_burrow', sa.Integer(), nullable=True))
    op.add_column('monster', sa.Column('has_darkvision', sa.Boolean(), nullable=True))
    op.add_column('monster', sa.Column('darkvision_range', sa.Integer(), nullable=True))
    op.add_column('monster', sa.Column('has_blindsight', sa.Boolean(), nullable=True))
    op.add_column('monster', sa.Column('blindsight_range', sa.Integer(), nullable=True))
    op.add_column('monster', sa.Column('has_truesight', sa.Boolean(), nullable=True))
    op.add_column('monster', sa.Column('truesight_range', sa.Integer(), nullable=True))
    op.add_column('monster', sa.Column('tremorsense_range', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_monster_environments'), 'monster', ['environments'], unique=False)
    op.create_index(op.f('ix_monster_has_aoe'), 'monster', ['has_aoe'], unique=False)
    op.create_index(op.f('ix_monster_has_blindsight'), 'monster', ['has_blindsight'], unique=False)
    op.create_index(op.f('ix_monster_has_darkvision'), 'monster', ['has_darkvision'], unique=False)
    op.create_index(op.f('ix_monster_has_lair_actions'), 'monster', ['has_lair_actions'], unique=False)
    op.create_index(op.f('ix_monster_has_ranged'), 'monster', ['has_ranged'], unique=False)
    op.create_index(op.f('ix_monster_has_truesight'), 'monster', ['has_truesight'], unique=False)
    op.create_index(op.f('ix_monster_is_flying'), 'monster', ['is_flying'], unique=False)
    op.create_index(op.f('ix_monster_is_legendary'), 'monster', ['is_legendary'], unique=False)
    op.create_index(op.f('ix_monster_is_spellcaster'), 'monster', ['is_spellcaster'], unique=False)
    op.create_index(op.f('ix_monster_name_en'), 'monster', ['name_en'], unique=False)
    op.create_index(op.f('ix_monster_name_ru'), 'monster', ['name_ru'], unique=False)
    op.create_index(op.f('ix_monster_roles'), 'monster', ['roles'], unique=False)
    op.create_index(op.f('ix_monster_slug'), 'monster', ['slug'], unique=False)
    op.create_index(op.f('ix_monster_source'), 'monster', ['source'], unique=False)
    op.create_index(op.f('ix_monster_speed_burrow'), 'monster', ['speed_burrow'], unique=False)
    op.create_index(op.f('ix_monster_speed_climb'), 'monster', ['speed_climb'], unique=False)
    op.create_index(op.f('ix_monster_speed_fly'), 'monster', ['speed_fly'], unique=False)
    op.create_index(op.f('ix_monster_speed_swim'), 'monster', ['speed_swim'], unique=False)
    op.create_index(op.f('ix_monster_speed_walk'), 'monster', ['speed_walk'], unique=False)
    op.create_index(op.f('ix_monster_subtypes'), 'monster', ['subtypes'], unique=False)
    op.create_index(op.f('ix_monster_threat_tier'), 'monster', ['threat_tier'], unique=False)
    op.create_index(op.f('ix_monster_tremorsense_range'), 'monster', ['tremorsense_range'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_monster_tremorsense_range'), table_name='monster')
    op.drop_index(op.f('ix_monster_threat_tier'), table_name='monster')
    op.drop_index(op.f('ix_monster_subtypes'), table_name='monster')
    op.drop_index(op.f('ix_monster_speed_walk'), table_name='monster')
    op.drop_index(op.f('ix_monster_speed_swim'), table_name='monster')
    op.drop_index(op.f('ix_monster_speed_fly'), table_name='monster')
    op.drop_index(op.f('ix_monster_speed_climb'), table_name='monster')
    op.drop_index(op.f('ix_monster_speed_burrow'), table_name='monster')
    op.drop_index(op.f('ix_monster_source'), table_name='monster')
    op.drop_index(op.f('ix_monster_slug'), table_name='monster')
    op.drop_index(op.f('ix_monster_roles'), table_name='monster')
    op.drop_index(op.f('ix_monster_name_ru'), table_name='monster')
    op.drop_index(op.f('ix_monster_name_en'), table_name='monster')
    op.drop_index(op.f('ix_monster_is_spellcaster'), table_name='monster')
    op.drop_index(op.f('ix_monster_is_legendary'), table_name='monster')
    op.drop_index(op.f('ix_monster_is_flying'), table_name='monster')
    op.drop_index(op.f('ix_monster_has_truesight'), table_name='monster')
    op.drop_index(op.f('ix_monster_has_ranged'), table_name='monster')
    op.drop_index(op.f('ix_monster_has_lair_actions'), table_name='monster')
    op.drop_index(op.f('ix_monster_has_darkvision'), table_name='monster')
    op.drop_index(op.f('ix_monster_has_blindsight'), table_name='monster')
    op.drop_index(op.f('ix_monster_has_aoe'), table_name='monster')
    op.drop_index(op.f('ix_monster_environments'), table_name='monster')
    op.drop_column('monster', 'tremorsense_range')
    op.drop_column('monster', 'truesight_range')
    op.drop_column('monster', 'has_truesight')
    op.drop_column('monster', 'blindsight_range')
    op.drop_column('monster', 'has_blindsight')
    op.drop_column('monster', 'darkvision_range')
    op.drop_column('monster', 'has_darkvision')
    op.drop_column('monster', 'speed_burrow')
    op.drop_column('monster', 'speed_climb')
    op.drop_column('monster', 'speed_swim')
    op.drop_column('monster', 'speed_fly')
    op.drop_column('monster', 'speed_walk')
    op.drop_column('monster', 'threat_tier')
    op.drop_column('monster', 'has_aoe')
    op.drop_column('monster', 'has_ranged')
    op.drop_column('monster', 'is_flying')
    op.drop_column('monster', 'page')
    op.drop_column('monster', 'source')
    op.drop_column('monster', 'is_spellcaster')
    op.drop_column('monster', 'has_lair_actions')
    op.drop_column('monster', 'is_legendary')
    op.drop_column('monster', 'roles')
    op.drop_column('monster', 'environments')
    op.drop_column('monster', 'subtypes')
    op.drop_column('monster', 'slug')
    op.drop_column('monster', 'name_en')
    op.drop_column('monster', 'name_ru')
    # ### end Alembic commands ###


