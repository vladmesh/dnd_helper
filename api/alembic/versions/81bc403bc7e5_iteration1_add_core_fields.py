"""iteration1_add_core_fields

Revision ID: 81bc403bc7e5
Revises: f4ba2cddd45e
Create Date: 2025-08-29 23:07:45.512615

"""
from alembic import op  # noqa: F401
import sqlalchemy as sa  # noqa: F401
import sqlmodel # noqa: F401
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '81bc403bc7e5'
down_revision = 'f4ba2cddd45e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('monster', sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('monster', sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('monster', sa.Column('size', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('monster', sa.Column('alignment', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('monster', sa.Column('hit_dice', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('monster', sa.Column('speeds', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('monster', sa.Column('cr', sa.Float(), nullable=True))
    op.add_column('monster', sa.Column('xp', sa.Integer(), nullable=True))
    op.add_column('monster', sa.Column('proficiency_bonus', sa.Integer(), nullable=True))
    op.add_column('monster', sa.Column('abilities', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('monster', sa.Column('saving_throws', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('monster', sa.Column('skills', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('monster', sa.Column('senses', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('monster', sa.Column('languages', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('monster', sa.Column('damage_immunities', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('monster', sa.Column('damage_resistances', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('monster', sa.Column('damage_vulnerabilities', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('monster', sa.Column('condition_immunities', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('monster', sa.Column('traits', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('monster', sa.Column('actions', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('monster', sa.Column('reactions', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('monster', sa.Column('legendary_actions', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('monster', sa.Column('spellcasting', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('monster', sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True))
    op.create_index(op.f('ix_monster_cr'), 'monster', ['cr'], unique=False)
    op.create_index(op.f('ix_monster_name'), 'monster', ['name'], unique=False)
    op.create_index(op.f('ix_monster_size'), 'monster', ['size'], unique=False)
    op.create_index(op.f('ix_monster_type'), 'monster', ['type'], unique=False)
    op.add_column('spell', sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('spell', sa.Column('level', sa.Integer(), nullable=True))
    op.add_column('spell', sa.Column('ritual', sa.Boolean(), nullable=True))
    op.add_column('spell', sa.Column('casting_time', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('spell', sa.Column('range', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('spell', sa.Column('duration', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('spell', sa.Column('concentration', sa.Boolean(), nullable=True))
    op.add_column('spell', sa.Column('components', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('spell', sa.Column('classes', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('spell', sa.Column('damage', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('spell', sa.Column('saving_throw', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('spell', sa.Column('area', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('spell', sa.Column('conditions', postgresql.ARRAY(sa.String()), nullable=True))
    op.add_column('spell', sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True))
    op.create_index(op.f('ix_spell_level'), 'spell', ['level'], unique=False)
    op.create_index(op.f('ix_spell_name'), 'spell', ['name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_spell_name'), table_name='spell')
    op.drop_index(op.f('ix_spell_level'), table_name='spell')
    op.drop_column('spell', 'tags')
    op.drop_column('spell', 'conditions')
    op.drop_column('spell', 'area')
    op.drop_column('spell', 'saving_throw')
    op.drop_column('spell', 'damage')
    op.drop_column('spell', 'classes')
    op.drop_column('spell', 'components')
    op.drop_column('spell', 'concentration')
    op.drop_column('spell', 'duration')
    op.drop_column('spell', 'range')
    op.drop_column('spell', 'casting_time')
    op.drop_column('spell', 'ritual')
    op.drop_column('spell', 'level')
    op.drop_column('spell', 'name')
    op.drop_index(op.f('ix_monster_type'), table_name='monster')
    op.drop_index(op.f('ix_monster_size'), table_name='monster')
    op.drop_index(op.f('ix_monster_name'), table_name='monster')
    op.drop_index(op.f('ix_monster_cr'), table_name='monster')
    op.drop_column('monster', 'tags')
    op.drop_column('monster', 'spellcasting')
    op.drop_column('monster', 'legendary_actions')
    op.drop_column('monster', 'reactions')
    op.drop_column('monster', 'actions')
    op.drop_column('monster', 'traits')
    op.drop_column('monster', 'condition_immunities')
    op.drop_column('monster', 'damage_vulnerabilities')
    op.drop_column('monster', 'damage_resistances')
    op.drop_column('monster', 'damage_immunities')
    op.drop_column('monster', 'languages')
    op.drop_column('monster', 'senses')
    op.drop_column('monster', 'skills')
    op.drop_column('monster', 'saving_throws')
    op.drop_column('monster', 'abilities')
    op.drop_column('monster', 'proficiency_bonus')
    op.drop_column('monster', 'xp')
    op.drop_column('monster', 'cr')
    op.drop_column('monster', 'speeds')
    op.drop_column('monster', 'hit_dice')
    op.drop_column('monster', 'alignment')
    op.drop_column('monster', 'size')
    op.drop_column('monster', 'type')
    op.drop_column('monster', 'name')
    # ### end Alembic commands ###


