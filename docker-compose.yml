services:
  postgres:
    image: postgres:16-alpine
    container_name: dnd_postgres
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: dnd_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: dnd_api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app/src
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_JSON=${LOG_JSON:-true}
      - LOG_SERVICE_NAME=api
    user: "${LOCAL_UID}:${LOCAL_GID}"
    depends_on:
      - postgres
      - redis
    ports:
      - "${API_PORT:-8000}:8000"
    command: python -m dnd_helper_api.main
    volumes:
      - ./api/alembic/versions:/app/alembic/versions


  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: dnd_bot
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app/src
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_JSON=${LOG_JSON:-true}
      - LOG_SERVICE_NAME=bot
    user: "${LOCAL_UID}:${LOCAL_GID}"
    depends_on:
      - redis
      - postgres
    command: python -m dnd_helper_bot.main

volumes:
  postgres_data:
  redis_data:


